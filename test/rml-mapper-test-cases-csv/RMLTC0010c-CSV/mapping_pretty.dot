digraph {
    0 [ label = "id:Source_0 \lSource Operator\ltype: File \lreference iterator: Iterator {\l    reference: None,\l    reference_formulation: CSVRows,\l    fields: [],\l    alias: None,\l} \lconfig: {\l  \"path\": \"country_info.csv\"\l}\l             " ]
    1 [ label = "id:Projection_1 \lProjection Operator\lProjected attributes: ISO 3166, Name, Country Code, " ]
    2 [ label = "id:ExtendOp_2 \lExtension Operator\lExtended pairs: \l ?tm0_o0_0 -> Literal { inner_function: TemplateFunctionValue { template: \"\\\\{\\\\{\\\\{ {ISO 3166} \\\\}\\\\}\\\\}\", variable_function_pairs: [(\"ISO 3166\", Reference { value: \"ISO 3166\" })] }, dtype_function: None, langtype_function: None }\l?tm0_p0_0 -> Iri { base_iri: Some(\"http://example.com/base/\"), inner_function: Constant { value: \"http://example.com/code\" } }\l?tm0_sm -> Iri { base_iri: Some(\"http://example.com/base/\"), inner_function: TemplateFunctionValue { template: \"http://example.com/{Country Code}/{Name}\", variable_function_pairs: [(\"Country Code\", UriEncode { inner_function: Reference { value: \"Country Code\" } }), (\"Name\", UriEncode { inner_function: Reference { value: \"Name\" } })] } }" ]
    3 [ label = "id:Serialize_3 \lSerializer Operator\lFormat type: NQuads\lTemplate: ?tm0_sm ?tm0_p0_0 ?tm0_o0_0 ." ]
    4 [ label = "id:Sink_4 \lTarget Operator\ltype: StdOut \ldata format: NQuads \lconfig: {}\l             " ]
    0 -> 1 [ label = "Fragment:default" ]
    1 -> 2 [ label = "Fragment:default" ]
    2 -> 3 [ label = "Fragment:default" ]
    3 -> 4 [ label = "Fragment:default" ]
}
