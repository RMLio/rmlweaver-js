digraph {
    0 [ label = "id:Source_0 \lSource Operator\ltype: File \lreference iterator: Iterator {\l    reference: None,\l    reference_formulation: CSVRows,\l    fields: [\l        Field {\l            alias: \"ids\",\l            reference: \"id\",\l            reference_formulation: CSVRows,\l            inner_fields: [],\l        },\l        Field {\l            alias: \"venues_names\",\l            reference: \"venue_name\",\l            reference_formulation: CSVRows,\l            inner_fields: [],\l        },\l        Field {\l            alias: \"venue_id\",\l            reference: \"venue_id\",\l            reference_formulation: CSVRows,\l            inner_fields: [],\l        },\l        Field {\l            alias: \"lat\",\l            reference: \"lat\",\l            reference_formulation: CSVRows,\l            inner_fields: [],\l        },\l        Field {\l            alias: \"long\",\l            reference: \"long\",\l            reference_formulation: CSVRows,\l            inner_fields: [],\l        },\l    ],\l    alias: Some(\l        \"performances_iterator\",\l    ),\l} \lconfig: {\l  \"path\": \"events.csv\"\l}\l             " ]
    1 [ label = "id:Extend_Concatenate_1 \lExtension Operator\lExtended pairs: \l location -> Concatenate { left_value: Reference { value: \"performances_iterator.lat\" }, separator: \"-\", right_value: Reference { value: \"performances_iterator.long\" } }" ]
    2 [ label = "id:Rename_expression_2 \lRename Operator\lRenaming pairs:\l performances_iterator.venue_id -> performances.venue_id\lperformances_iterator.ids -> performances.ids\lperformances_iterator.long -> performances.long\lperformances_iterator.venues_names -> performances.venues_names\lperformances_iterator.lat -> performances.lat" ]
    3 [ label = "id:Extend_for_Serializer_3 \lExtension Operator\lExtended pairs: \l _om_2 -> Literal { inner_function: Reference { value: \"performances.venue_id\" }, dtype_function: None, langtype_function: None }\l_sm_0 -> Iri { inner_function: TemplateFunctionValue { template: \"http://ex.com/{func_value}\", variable_function_pairs: [(\"func_value\", Reference { value: \"performances.ids\" })] } }\l_om_1 -> Literal { inner_function: Reference { value: \"location\" }, dtype_function: None, langtype_function: None }\l_om_0 -> Literal { inner_function: Reference { value: \"performances.venues_names\" }, dtype_function: None, langtype_function: None }" ]
    4 [ label = "id:Serialize_4 \lSerializer Operator\lFormat type: NQuads\lTemplate: ?_sm_0 <http://ex.com/venue> ?_om_0  .\l?_sm_0 <http://ex.com/location> ?_om_1  .\l?_sm_0 <http://ex.com/venue_id> ?_om_2  ." ]
    5 [ label = "id:Sink_5 \lTarget Operator\ltype: StdOut \ldata format: NQuads \lconfig: {}\l             " ]
    0 -> 1 [ label = "Fragment:default" ]
    1 -> 2 [ label = "Fragment:default" ]
    2 -> 3 [ label = "Fragment:default" ]
    3 -> 4 [ label = "Fragment:default" ]
    4 -> 5 [ label = "Fragment:default" ]
}
